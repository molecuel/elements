{"version":3,"sources":["elementDecorators.ts"],"names":[],"mappings":"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","file":"elementDecorators.js","sourcesContent":["export class Decorators {\r\n  public static get NOT_FOR_ELASTIC(): string { return 'NotForElastic'; }\r\n  public static get INDEX_MAPPING(): string { return 'Mapping'; }\r\n  public static get USE_MONGO_COLLECTION(): string { return 'UseMongoCollection'; }\r\n  public static get USE_ELASTIC_TYPE(): string { return 'UseElasticType'; }\r\n}\r\n\r\nexport const METADATAKEY = 'mlcl_elements:validators';\r\n\r\nexport function Mapping() {\r\n  return function(target: Object, propertyName: string) {\r\n    let metadata = Reflect.getMetadata(METADATAKEY, target);\r\n    if (!metadata) {\r\n      metadata = [];\r\n    }\r\n    metadata.push({\r\n      type: Decorators.INDEX_MAPPING,\r\n      property: propertyName\r\n    });\r\n    Reflect.defineMetadata(METADATAKEY, metadata, target);\r\n  };\r\n}\r\n\r\n\r\nexport function NotForElastic() {\r\n  return function(target: Object, propertyName: string) {\r\n    let metadata = Reflect.getMetadata(METADATAKEY, target);\r\n    if (!metadata) {\r\n      metadata = [];\r\n    }\r\n    metadata.push({\r\n      type: Decorators.NOT_FOR_ELASTIC,\r\n      property: propertyName\r\n    });\r\n    Reflect.defineMetadata(METADATAKEY, metadata, target);\r\n  };\r\n}\r\n\r\nexport function UseMongoCollection(collection: string) {\r\n  return function(target: Object) {\r\n    let input: any = target;\r\n    let className: string;\r\n    if ('prototype' in input) {\r\n      className = input.prototype.constructor.name;\r\n    }\r\n    else {\r\n      className = input.constructor.name;\r\n    }\r\n    let metadata = Reflect.getMetadata(METADATAKEY, target);\r\n    if (!metadata) {\r\n      metadata = [];\r\n    }\r\n    metadata.push({\r\n      type: Decorators.USE_MONGO_COLLECTION,\r\n      property: className,\r\n      value: collection\r\n    });\r\n    Reflect.defineMetadata(METADATAKEY, metadata, target);\r\n  };\r\n}\r\n\r\nexport function UseElasticType(type: string) {\r\n  return function(target: Object) {\r\n    let input: any = target;\r\n    let className: string;\r\n    if ('prototype' in input) {\r\n      className = input.prototype.constructor.name;\r\n    }\r\n    else {\r\n      className = input.constructor.name;\r\n    }\r\n    let metadata = Reflect.getMetadata(METADATAKEY, target);\r\n    if (!metadata) {\r\n      metadata = [];\r\n    }\r\n    metadata.push({\r\n      type: Decorators.USE_ELASTIC_TYPE,\r\n      property: className,\r\n      value: type\r\n    });\r\n    Reflect.defineMetadata(METADATAKEY, metadata, target);\r\n  };\r\n}\r\n"],"sourceRoot":"/source/"}
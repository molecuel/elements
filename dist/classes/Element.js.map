{"version":3,"sources":["classes/Element.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;AACb,QAAO,kBAAkB,CAAC,CAAA;AAG1B,6BAAuD,YAAY,CAAC,CAAA;AAGpE;IAMS,WAAW;QAChB,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;IAC1B,CAAC;IACM,UAAU,CAAC,QAAQ;QACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IACM,QAAQ;QACb,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IACM,UAAU,CAAC,UAAgB;QAChC,IAAI,IAAI,GAAG,UAAU,IAAI,IAAI,CAAC;QAC9B,IAAI,MAAM,GAAQ,EAAE,CAAC;QAUrB,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YACrB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBAOxC,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,WAAW;uBACjC,OAAO,UAAU,KAAK,WAAW,CAAC,CAAC,CAAC;oBAEvC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC3B,CAAC;gBAED,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS;uBACtB,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAGnC,IAAI,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;oBAChE,EAAE,CAAC,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC;wBAC9B,MAAM,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;oBACxD,CAAC;gBACH,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS;uBAC3B,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC;oBACrC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC1B,CAAC;YACH,CAAC;QACH,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;AACH,CAAC;AA1DC;IAAC,yBAAY,EAAE;IACd,oBAAO,EAAE;;oCAAA;AAFC,eAAO,UA2DnB,CAAA","file":"classes/Element.js","sourcesContent":["'use strict';\r\nimport 'reflect-metadata';\r\nimport { Elements } from '../index';\r\nimport { IElement } from '../interfaces/IElement';\r\nimport { IValidatorError, ValidateType, MongoID } from 'tsvalidate';\r\n// import _ = require('lodash');\r\n\r\nexport class Element implements IElement {\r\n  @ValidateType()\r\n  @MongoID()\r\n  public _id: any;\r\n  public elements: Elements;\r\n  public static elements: Elements;\r\n  public getElements(): Elements {\r\n    return Element.elements;\r\n  }\r\n  public setFactory(elements) {\r\n    this.elements = elements;\r\n  }\r\n  public validate(): IValidatorError[] {\r\n    return this.elements.validate(this);\r\n  }\r\n  public toDbObject(subElement?: any): any {\r\n    let that = subElement || this;\r\n    let result: any = {};\r\n    // try {\r\n    //   if (Element.prototype.validate().length > 0) {\r\n    //     return Element.prototype.validate();\r\n    //   }\r\n    // }\r\n    // catch (err) {\r\n    //   return err;\r\n    // }\r\n\r\n    for (let key in that) {\r\n      if (({}).hasOwnProperty.call(that, key)) {\r\n\r\n        // check if the property is a reference\r\n        // let isReference = Reflect.getMetadata('elements:modelref', that, key);\r\n        // if (isReference && that[key] && that[key]._id) {\r\n        //   result[key] = that[key]._id;\r\n        // }\r\n        if (typeof that['_id'] !== 'undefined'\r\n          && typeof subElement === 'undefined') {\r\n\r\n          result._id = that['_id'];\r\n        }\r\n        // check if is defined\r\n        if (that[key] !== undefined\r\n          && typeof that[key] === 'object') {\r\n\r\n          // check if the property is decorated\r\n          let isDecorated = Reflect.getMetadata('design:type', that, key);\r\n          if (isDecorated !== undefined) {\r\n            result[key] = Element.prototype.toDbObject(that[key]);\r\n          }\r\n        }\r\n        else if (that[key] !== undefined\r\n          && typeof that[key] !== 'function') {\r\n          result[key] = that[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}